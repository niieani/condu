import type { GenerateFileOptions } from "../commands/apply/FileManager.js";
import { CONDU_CONFIG_FILE_NAME, CONDU_CONFIG_DIR_NAME } from "../constants.js";
import * as path from "node:path";
import * as fs from "node:fs/promises";
import { match, P } from "ts-pattern";
import { defineFeature } from "../api/defineFeature.js";

export interface AutoLinkConfig {
  /** remap file names, key is the filename in .config/, value is the target name */
  mapping?: Record<string, string>;
  ignore?: (string | RegExp)[];
}

declare module "../extendable.js" {
  interface PeerContext {
    autolink: Required<AutoLinkConfig>;
  }
}

export const autolink = (config: AutoLinkConfig = {}) =>
  defineFeature("autolink", {
    after: "*",
    initialPeerContext: {
      ignore: config.ignore ?? [],
      mapping: config.mapping ?? {},
    },
    async defineRecipe(condu, { ignore, mapping }) {
      const entries = await fs.readdir(condu.project.config.configDir, {
        withFileTypes: true,
      });
      const allIgnores = [CONDU_CONFIG_FILE_NAME, ...ignore];
      const filesToLink = entries
        .filter(
          (entry) =>
            entry.isFile() &&
            !allIgnores.some((i) =>
              typeof i === "object"
                ? i.test(entry.name)
                : path.normalize(i) === entry.name,
            ),
        )
        .map((entry) => entry.name);

      for (const filename of filesToLink) {
        const targetName = mapping?.[filename] ?? filename;
        const extension = path.extname(filename);
        const fileOptions = match(extension)
          .returnType<GenerateFileOptions<string>>()
          .with(P.union(".ts", ".mts", ".js", ".mjs"), () => ({
            content: `/* eslint-disable */
// This file is auto-generated by condu's autolink feature.
// Do not edit this file directly - see the file it re-exports from:
// @ts-ignore
export { default } from "./${CONDU_CONFIG_DIR_NAME}/${filename}";`,
          }))
          .with(P.union(".cts", ".cjs"), () => ({
            content: `/* eslint-disable */
// This file is auto-generated by condu's autolink feature.
// Do not edit this file directly - see the file it re-exports from:
// @ts-ignore
module.exports = require("./${CONDU_CONFIG_DIR_NAME}/${filename}");`,
          }))
          .otherwise(() => ({
            symlinkTarget: `./${CONDU_CONFIG_DIR_NAME}/${filename}`,
          }));

        condu.root.generateFile(targetName, fileOptions);
      }
    },
  });
