/**
* This file was automatically generated by json-schema-to-typescript.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run json-schema-to-typescript to regenerate this file.
*/

/**
 * Schema for defining manifest config file
 */
export type ReleasePleaseConfig = (ReleaserConfigOptions & {
/**
 * Path to the release-please manifest config schema
 */
$schema?: string
/**
 * Per-path component configuration.
 */
packages: {
[k: string]: (ReleaserConfigOptions) | undefined
}
/**
 * For the initial release of a library, only consider as far back as this commit SHA. This is an uncommon use case and should generally be avoided.
 */
"bootstrap-sha"?: string
/**
 * For any release, only consider as far back as this commit SHA. This is an uncommon use case and should generally be avoided.
 */
"last-release-sha"?: string
/**
 * When using the `node-workspace` plugin, force all local dependencies to be linked.
 */
"always-link-local"?: boolean
/**
 * Plugins to apply to pull requests. Plugins can be added to perform extra release processing that cannot be achieved by an individual release strategy.
 */
plugins?: (string | {
/**
 * The name of the plugin.
 */
type: "linked-versions"
/**
 * The name of the group of components.
 */
groupName: string
/**
 * List of component names that are part of this group.
 */
components: string[]
/**
 * Whether to merge in-scope pull requests into a combined release pull request. Defaults to `true`.
 */
merge?: boolean
/**
 * Words that sentence casing logic will not be applied to
 */
specialWords?: string[]
[k: string]: unknown | undefined
} | {
/**
 * The name of the plugin.
 */
type?: ("cargo-workspace" | "maven-workspace")
/**
 * Whether to force updating all packages regardless of the dependency tree. Defaults to `false`.
 */
updateAllPackages?: boolean
/**
 * Whether to merge in-scope pull requests into a combined release pull request. Defaults to `true`.
 */
merge?: boolean
/**
 * Whether to analyze all packages in the workspace for cross-component version bumping. This currently only works for the maven-workspace plugin. Defaults to `true`.
 */
considerAllArtifacts?: boolean
[k: string]: unknown | undefined
} | {
/**
 * The name of the plugin.
 */
type?: "node-workspace"
/**
 * Whether to force updating all packages regardless of the dependency tree. Defaults to `false`.
 */
updateAllPackages?: boolean
/**
 * Whether to merge in-scope pull requests into a combined release pull request. Defaults to `true`.
 */
merge?: boolean
/**
 * Whether to analyze all packages in the workspace for cross-component version bumping. This currently only works for the maven-workspace plugin. Defaults to `true`.
 */
considerAllArtifacts?: boolean
/**
 * Also bump peer dependency versions if they are modified. Defaults to `false`.
 */
updatePeerDependencies?: boolean
[k: string]: unknown | undefined
} | {
/**
 * The name of the plugin.
 */
type?: "group-priority"
/**
 * Group names ordered with highest priority first.
 */
groups?: string[]
[k: string]: unknown | undefined
} | {
/**
 * The name of the plugin.
 */
type?: string
[k: string]: unknown | undefined
})[]
/**
 * Text to be used as Signed-off-by in the commit.
 */
signoff?: string
/**
 * When grouping multiple release pull requests use this pattern for the title.
 */
"group-pull-request-title-pattern"?: string
/**
 * When considering previously releases, only look this deep.
 */
"release-search-depth"?: number
/**
 * When considering commit history, only look this many commits deep.
 */
"commit-search-depth"?: number
/**
 * Whether to open pull requests/releases sequentially rather than concurrently. If you have many components, you may want to set this to avoid secondary rate limits.
 */
"sequential-calls"?: boolean
/**
 * Comma-separated list of labels to add to newly opened pull request. These are used to identify release pull requests.
 */
label?: string
/**
 * Comma-separated list of labels to add to a pull request that has been released/tagged
 */
"release-label"?: string
/**
 * release-please automatically adds ` ` (space) in front of parsed ${component}. This option indicates whether that behaviour should be disabled. Defaults to `false`
 */
"component-no-space"?: boolean
[k: string]: unknown | undefined
} & {
$schema?: unknown
packages?: unknown
"bootstrap-sha"?: unknown
"last-release-sha"?: unknown
"always-link-local"?: unknown
plugins?: unknown
signoff?: unknown
"group-pull-request-title-pattern"?: unknown
"release-search-depth"?: unknown
"commit-search-depth"?: unknown
"sequential-calls"?: unknown
"release-type"?: unknown
"bump-minor-pre-major"?: unknown
"bump-patch-for-minor-pre-major"?: unknown
versioning?: unknown
"changelog-sections"?: unknown
"release-as"?: unknown
"skip-github-release"?: unknown
draft?: unknown
prerelease?: unknown
"draft-pull-request"?: unknown
label?: unknown
"release-label"?: unknown
"extra-label"?: unknown
"include-component-in-tag"?: unknown
"include-v-in-tag"?: unknown
"changelog-type"?: unknown
"changelog-host"?: unknown
"changelog-path"?: unknown
"pull-request-title-pattern"?: unknown
"pull-request-header"?: unknown
"pull-request-footer"?: unknown
"separate-pull-requests"?: unknown
"tag-separator"?: unknown
"extra-files"?: unknown
"version-file"?: unknown
"snapshot-label"?: unknown
"initial-version"?: unknown
"exclude-paths"?: unknown
"component-no-space"?: never
})

export interface ReleaserConfigOptions {
/**
 * The strategy to use for this component.
 */
"release-type"?: string
/**
 * Breaking changes only bump semver minor if version < 1.0.0
 */
"bump-minor-pre-major"?: boolean
/**
 * Feature changes only bump semver patch if version < 1.0.0
 */
"bump-patch-for-minor-pre-major"?: boolean
/**
 * Configuration option for the prerelease versioning strategy. If prerelease strategy used and type set, will set the prerelease part of the version to the provided value in case prerelease part is not present.
 */
"prerelease-type"?: string
/**
 * Versioning strategy. Defaults to `default`
 */
versioning?: string
/**
 * Override the Changelog configuration sections
 */
"changelog-sections"?: {
/**
 * Semantic commit type (e.g. `feat`, `chore`)
 */
type: string
/**
 * Changelog section title
 */
section: string
/**
 * Skip displaying this type of commit. Defaults to `false`.
 */
hidden?: boolean
[k: string]: unknown | undefined
}[]
/**
 * [DEPRECATED] Override the next version of this package. Consider using a `Release-As` commit instead.
 */
"release-as"?: string
/**
 * Skip tagging GitHub releases for this package. Release-Please still requires releases to be tagged, so this option should only be used if you have existing infrastructure to tag these releases.Defaults to `false`.
 */
"skip-github-release"?: boolean
/**
 * Create the GitHub release in draft mode. Defaults to `false`.
 */
draft?: boolean
/**
 * Create the GitHub release as prerelease. Defaults to `false`.
 */
prerelease?: boolean
/**
 * Open the release pull request in draft mode. Defaults to `false`.
 */
"draft-pull-request"?: boolean
/**
 * Comma-separated list of labels to add to a newly opened pull request
 */
"extra-label"?: string
/**
 * When tagging a release, include the component name as part of the tag. Defaults to `true`.
 */
"include-component-in-tag"?: boolean
/**
 * When tagging a release, include `v` in the tag. Defaults to `false`.
 */
"include-v-in-tag"?: boolean
/**
 * The type of changelog to use. Defaults to `default`.
 */
"changelog-type"?: ("default" | "github")
/**
 * Generate changelog links to this GitHub host. Useful for running against GitHub Enterprise.
 */
"changelog-host"?: string
/**
 * Path to the file that tracks release note changes. Defaults to `CHANGELOG.md`.
 */
"changelog-path"?: string
/**
 * Customize the release pull request title.
 */
"pull-request-title-pattern"?: string
/**
 * Customize the release pull request header.
 */
"pull-request-header"?: string
/**
 * Customize the release pull request footer.
 */
"pull-request-footer"?: string
/**
 * Open a separate release pull request for each component. Defaults to `false`.
 */
"separate-pull-requests"?: boolean
/**
 * Customize the separator between the component and version in the GitHub tag.
 */
"tag-separator"?: string
/**
 * Specify extra generic files to replace versions.
 */
"extra-files"?: (string | {
/**
 * The file format type.
 */
type: ("json" | "toml" | "yaml")
/**
 * The path to the file.
 */
path: string
/**
 * Whether to treat the path as a glob. Defaults to `false`.
 */
glob?: boolean
/**
 * The jsonpath to the version entry in the file.
 */
jsonpath: string
[k: string]: unknown | undefined
} | {
/**
 * The file format type.
 */
type: "xml"
/**
 * The path to the file.
 */
path: string
/**
 * Whether to treat the path as a glob. Defaults to `false`.
 */
glob?: boolean
/**
 * The xpath to the version entry in the file.
 */
xpath: string
[k: string]: unknown | undefined
} | {
/**
 * The file format type.
 */
type: "pom"
/**
 * The path to the file.
 */
path: string
/**
 * Whether to treat the path as a glob. Defaults to `false`.
 */
glob?: boolean
[k: string]: unknown | undefined
} | {
/**
 * The file format type.
 */
type: "generic"
/**
 * The path to the file.
 */
path: string
/**
 * Whether to treat the path as a glob. Defaults to `false`.
 */
glob?: boolean
[k: string]: unknown | undefined
})[]
/**
 * Path of commits to be excluded from parsing. If all files from commit belong to one of the paths it will be skipped
 */
"exclude-paths"?: string[]
/**
 * Path to the specialize version file. Used by `ruby` and `simple` strategies.
 */
"version-file"?: string
/**
 * Label to add to snapshot pull request. Used by `java` strategies.
 */
"snapshot-label"?: string
/**
 * If set, do not propose snapshot pull requests. Used by `java` strategies.
 */
"skip-snapshot"?: boolean
/**
 * Releases the initial library with a specified version
 */
"initial-version"?: string
/**
 * release-please automatically adds ` ` (space) in front of parsed ${component}. This option indicates whether that behaviour should be disabled. Defaults to `false`
 */
"component-no-space"?: boolean
[k: string]: unknown | undefined
}

export type { ReleasePleaseConfig as default };
